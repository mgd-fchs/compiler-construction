class Helper0 {
}

class A {
    // RELOP : '<' | '>' | '<=' | '>=' | '==' | '!=';
    private int relopPass(){
        bool bool_;
        int int0;
        int int1;
        int int2;

        int0 = 0;
        int1 = 1;
        int2 = 2;

        bool_ = int0 < int1;
        bool_ = int0 > int1;
        bool_ = int0 <= int1;
        bool_ = int0 >= int1;
        bool_ = int0 == int1;
        bool_ = int0 != int1;

        return 0;
    }

    // RELOP for class type: '==' | '!=';
    private int relopClassTypePass(){
        Helper0 a;
        Helper0 b;
        bool result;

        result = a == b;
        result = a != b;
        result = a == nix;
        result = a != nix;

        return 0;
    }

    // MULOP : '*' | '/' | '%';
    private int mulopPass(){
        int result;
        int a;
        int b;

        result = a * a;
        result = a / b;
        result = a % b;

        return 0;
    }

    // AND : '&&';
    private int andPass(){
        bool result;
        bool a;
        bool b;

        result = a && b;

        return 0;
    }

    // OR : '||';
    private int orPass(){
        bool result;
        bool a;
        bool b;

        result = a || b;

        return 0;
    }

    // ADDOP : '+' | '-';
    private int addopPass(){
        int result;
        int a;
        int b;

        result = a + b;
        result = a - b;

        return 0;
    }

    // NOT : '!';
    private int notPass(){
        bool result;
        bool a;

        result = !a;

        return 0;
    }
}